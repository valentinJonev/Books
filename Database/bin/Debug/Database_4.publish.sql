/*
Deployment script for Books

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Books"
:setvar DefaultFilePrefix "Books"
:setvar DefaultDataPath "c:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS2012\MSSQL\DATA\"
:setvar DefaultLogPath "c:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS2012\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'The following operation was generated from a refactoring log file 02d0dc25-bb54-4963-b548-ff42b0f85ab5';

PRINT N'Rename [dbo].[PK_Books] to BookId';


GO
EXECUTE sp_rename @objname = N'[dbo].[PK_Books]', @newname = N'BookId', @objtype = N'OBJECT';


GO
PRINT N'Starting rebuilding table [dbo].[Books]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Books] (
    [BookId]      INT           IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (50)  NOT NULL,
    [Cover]       VARCHAR (MAX) NULL,
    [PublishDate] DATE          NOT NULL,
    [AuthorId]    INT           NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Books] PRIMARY KEY CLUSTERED ([BookId] ASC) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Books])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Books] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Books] ([BookId], [Name], [Cover], [PublishDate], [AuthorId])
        SELECT   [BookId],
                 [Name],
                 [Cover],
                 [PublishDate],
                 [AuthorId]
        FROM     [dbo].[Books]
        ORDER BY [BookId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Books] OFF;
    END

DROP TABLE [dbo].[Books];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Books]', N'Books';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Books]', N'PK_Books', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '02d0dc25-bb54-4963-b548-ff42b0f85ab5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('02d0dc25-bb54-4963-b548-ff42b0f85ab5')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
SET IDENTITY_INSERT [dbo].[Authors] ON 
GO
INSERT [dbo].[Authors] ([Id], [Name]) VALUES (1, N'Terry Pratchet')
GO
INSERT [dbo].[Authors] ([Id], [Name]) VALUES (2, N'J. K. Rowling')
GO
INSERT [dbo].[Authors] ([Id], [Name]) VALUES (3, N'J. R. R. Tolken')
GO
SET IDENTITY_INSERT [dbo].[Authors] OFF
GO

GO
PRINT N'Update complete.';


GO
